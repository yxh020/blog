{"ast":null,"code":"import \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nimport \"antd/es/select/style\";\nimport _Select from \"antd/es/select\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\SHYA\\\\Desktop\\\\blog\\\\src\\\\containers\\\\writing\\\\writing.jsx\",\n    _dec,\n    _class;\n\nimport React, { Component } from 'react';\nimport RichTextEditor from './rich_text_editor';\nimport { Link } from 'react-router-dom';\nimport { getSort, updateSort, addText } from '../../api';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { nanoid } from 'nanoid';\nimport './writing.less';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = _Select;\nlet Writing = (_dec = connect(state => ({\n  user: state.userInfo\n}), {}), _dec(_class = class Writing extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showAdd: false,\n      sort: [],\n      visible: false,\n      titleValue: '',\n      sendSort: '',\n      isShow: false\n    };\n\n    this.addSort = () => {\n      this.setState({\n        showAdd: !this.state.showAdd\n      });\n    };\n\n    this.valueRef = /*#__PURE__*/React.createRef();\n\n    this.submit = async () => {\n      //获取输入内容\n      const value = this.valueRef.current.state.value;\n\n      if (value === undefined) {} else {\n        if (!value.trim()) {\n          _message.info('输入不能为空！', 0.5);\n        } else {\n          //console.log(value.trim()+'---');\n          //发送添加分类的请求\n          let sortArr = this.state.sort; //let oldLength = sortArr.length\n\n          sortArr.unshift(value.trim()); //console.log(sortArr);\n\n          let result = await updateSort(this.props.user.id, sortArr);\n\n          if (result) {\n            // let newLength = sortArr.length\n            // newLength>oldLength?\n            _message.success('添加成功', 1); //:(message.error('添加失败',1)\n\n\n            this.setState({}); //)\n          } else {\n            _message.error('添加失败', 1);\n\n            this.setState({\n              sort: []\n            });\n          } //关闭输入框\n\n\n          this.setState({\n            showAdd: !this.state.showAdd\n          });\n        }\n      }\n    };\n\n    this.titleValue = event => {};\n\n    this.cancel = () => {\n      this.setState({\n        showAdd: !this.state.showAdd\n      });\n    };\n\n    this.sortValue = event => {\n      let value = event.target.innerHTML;\n\n      if (value.length <= 10) {\n        console.log(value);\n      } else {} //console.log(event.target.innerHTML);\n\n    };\n\n    this.handleChange = value => {\n      //console.log(`selected ${value}`);\n      this.setState({\n        sendSort: value\n      });\n    };\n\n    this.publish = () => {\n      //console.log('dian le ');\n      this.setState({\n        visible: true\n      });\n    };\n\n    this.handleOk = async e => {\n      //console.log(e);\n      this.setState({\n        visible: false\n      });\n      const username = this.props.user.username;\n      const {\n        sendSort: sort,\n        titleValue: title\n      } = this.state;\n\n      if (sort) {\n        if (title) {\n          let text = this.RichText.getRichText(); // console.log(username);\n          // console.log(sort);\n          // console.log(title);\n          // console.log(text);\n          //发送添加文章的请求\n\n          let result = await addText(title, username, sort, text);\n\n          if (result !== undefined) {\n            _message.success('发表成功', 1);\n\n            console.log(result);\n            this.setState({\n              isShow: false\n            });\n          } else {\n            _message.info('网络差，请稍后再试！', 1);\n          }\n        } else {}\n      } else {\n        _message.info('分类是必选的！', 1);\n      }\n    };\n\n    this.handleCancel = e => {\n      //console.log(e);\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.onFinish = values => {\n      this.setState({\n        visible: true\n      });\n      this.setState({\n        titleValue: values.title\n      }); //console.log('Success:', values);\n    };\n\n    this.showWriting_editor = () => {\n      this.setState({\n        isShow: true\n      });\n    };\n  }\n\n  //组件挂载后发送请求获取用户的分类\n  async componentDidMount() {\n    //console.log(this.props.user.id);\n    let result = await getSort(this.props.user.id); //console.log(result)\n\n    if (result !== undefined) {\n      if (result.status === 0) {\n        const {\n          sort\n        } = result.data;\n        this.setState({\n          sort\n        });\n      } else {\n        _message.warning('当前网络差，请稍后再试');\n      }\n    } else {}\n  } //新建分类的回调\n\n\n  render() {\n    const {\n      sort\n    } = this.state; //console.log(this.state.sort); \n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"writing_div\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"writing_left\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/home\",\n          children: /*#__PURE__*/_jsxDEV(_Button, {\n            className: \"writing_left_home\",\n            type: \"primary\",\n            shape: \"round\",\n            size: \"large\",\n            ghost: \"true\",\n            children: \"\\u56DE\\u9996\\u9875\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.addSort,\n          style: {\n            color: 'white',\n            fontSize: \"15px\",\n            outline: 'none',\n            backgroundColor: r,\n            border: 'none'\n          },\n          children: [/*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 21\n          }, this), \"\\u65B0\\u5EFA\\u5206\\u7C7B\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: this.state.showAdd ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(_Input, {\n              ref: this.valueRef,\n              style: {\n                backgroundColor: '#595959',\n                marginTop: '10px',\n                marginBottom: '12px',\n                color: 'white'\n              },\n              placeholder: \"\\u8BF7\\u8F93\\u5165\\u5206\\u7C7B\\u540D...\",\n              maxLength: \"10\",\n              bordered: false,\n              size: \"large\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(_Button, {\n              onClick: this.submit,\n              type: \"primary\",\n              shape: \"round\",\n              size: \"middle\",\n              ghost: \"true\",\n              style: {\n                color: '\t #33cc00',\n                borderColor: '\t #33cc00'\n              },\n              children: \"\\u63D0\\u4EA4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(_Button, {\n              onClick: this.cancel,\n              style: {\n                color: '#999999',\n                marginLeft: '10px'\n              },\n              type: \"link\",\n              children: \"\\u53D6\\u6D88\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 44\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: this.sortValue,\n          className: \"sort_div\",\n          children: sort ? sort.map(a => {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"sort_div_li\",\n              children: a\n            }, nanoid(), false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 40\n            }, this);\n          }) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this), this.state.isShow ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"writing_editor\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"editor_h1\",\n          children: \"\\u6807\\u9898\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(_Form, {\n          onFinish: this.onFinish,\n          children: [/*#__PURE__*/_jsxDEV(_Form.Item, {\n            name: \"title\",\n            rules: [{\n              required: true,\n              message: '标题不能为空!'\n            }, {\n              max: 30,\n              message: '标题最多为30位!'\n            }, {\n              pattern: /^[^\\s]*$/,\n              message: '标题不能含空格'\n            }],\n            children: /*#__PURE__*/_jsxDEV(_Input, {\n              size: \"large\",\n              autoComplete: \"off\",\n              placeholder: \"\\u5728\\u6B64\\u8F93\\u5165\\u6807\\u9898\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"editor_h2\",\n            children: \"\\u5206\\u7C7B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(_Select, {\n            defaultValue: \"--\\u9009\\u62E9\\u5206\\u7C7B--\",\n            style: {\n              width: '100%'\n            },\n            onChange: this.handleChange,\n            children: sort ? sort.map(a => {\n              return /*#__PURE__*/_jsxDEV(Option, {\n                value: a,\n                children: a\n              }, nanoid(), false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 40\n              }, this);\n            }) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"editor_h3\",\n              children: [\"\\u6B63\\u6587\", /*#__PURE__*/_jsxDEV(_Button, {\n                //onClick={this.publish}\n                htmlType: \"submit\",\n                type: \"primary\",\n                ghost: true,\n                style: {\n                  width: '120px',\n                  float: 'right',\n                  marginRight: '10px'\n                },\n                shape: \"round\",\n                size: 'large',\n                children: \"\\u53D1\\u8868\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 21\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(_Modal, {\n          title: \"\\u63D0\\u793A\",\n          visible: this.state.visible,\n          onOk: this.handleOk,\n          onCancel: this.handleCancel,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u786E\\u5B9A\\u53D1\\u8868\\u5417\\uFF1F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"editor\",\n          children: /*#__PURE__*/_jsxDEV(RichTextEditor, {\n            ref: c => this.RichText = c\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: this.showWriting_editor,\n        children: \"\\u6DFB\\u52A0\\u6587\\u7AE0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this);\n  }\n\n}) || _class);\nexport default Writing;","map":{"version":3,"sources":["C:/Users/SHYA/Desktop/blog/src/containers/writing/writing.jsx"],"names":["React","Component","RichTextEditor","Link","getSort","updateSort","addText","PlusOutlined","nanoid","connect","Option","Writing","state","user","userInfo","showAdd","sort","visible","titleValue","sendSort","isShow","addSort","setState","valueRef","createRef","submit","value","current","undefined","trim","info","sortArr","unshift","result","props","id","success","error","event","cancel","sortValue","target","innerHTML","length","console","log","handleChange","publish","handleOk","e","username","title","text","RichText","getRichText","handleCancel","onFinish","values","showWriting_editor","componentDidMount","status","data","warning","render","color","fontSize","outline","backgroundColor","r","border","marginTop","marginBottom","borderColor","marginLeft","map","a","required","message","max","pattern","width","float","marginRight","c"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport RichTextEditor from './rich_text_editor'\r\nimport {Link} from 'react-router-dom'\r\nimport {Button,Input,message,Select,Modal,Form} from 'antd'\r\nimport {getSort,updateSort,addText} from '../../api'\r\nimport {PlusOutlined} from '@ant-design/icons';\r\nimport {nanoid} from 'nanoid'\r\nimport './writing.less'\r\nimport { connect } from 'react-redux'\r\nconst { Option } = Select;\r\n\r\n@connect(\r\n    state=>({user:state.userInfo}),\r\n    {}\r\n)\r\nclass Writing extends Component {\r\n    state={\r\n        showAdd:false,\r\n        sort:[],\r\n        visible:false,\r\n        titleValue:'',\r\n        sendSort:'',\r\n        isShow:false\r\n    }\r\n\r\n    //组件挂载后发送请求获取用户的分类\r\n    async componentDidMount (){\r\n        //console.log(this.props.user.id);\r\n        let result = await getSort(this.props.user.id)\r\n        //console.log(result)\r\n        if(result!==undefined){\r\n            if(result.status===0){\r\n                const {sort} = result.data\r\n                this.setState({sort})\r\n            }else {\r\n                message.warning('当前网络差，请稍后再试')\r\n            }\r\n        }else{}\r\n        \r\n        \r\n    }\r\n\r\n    //新建分类的回调\r\n    addSort = () => {\r\n        this.setState({showAdd:!this.state.showAdd})\r\n    }\r\n    valueRef = React.createRef()\r\n    //提交按钮回调\r\n    submit = async() => {\r\n        //获取输入内容\r\n        const value = this.valueRef.current.state.value\r\n        if(value===undefined){}else{\r\n            if(!value.trim()){\r\n                message.info('输入不能为空！',0.5)\r\n            }else{\r\n                //console.log(value.trim()+'---');\r\n                //发送添加分类的请求\r\n                let sortArr = this.state.sort\r\n                //let oldLength = sortArr.length\r\n                sortArr.unshift(value.trim())\r\n                //console.log(sortArr);\r\n                let result = await updateSort(this.props.user.id,sortArr)\r\n                if(result){\r\n                    // let newLength = sortArr.length\r\n                    // newLength>oldLength?\r\n                    message.success('添加成功',1)\r\n                    //:(message.error('添加失败',1)\r\n                    this.setState({})\r\n                    //)\r\n                }else{\r\n                    message.error('添加失败',1)\r\n                    this.setState({sort:[]})\r\n                }\r\n                \r\n                //关闭输入框\r\n                this.setState({showAdd:!this.state.showAdd})\r\n            }\r\n        }\r\n    }\r\n    //标题的回调\r\n    titleValue = (event) => {\r\n        \r\n    }\r\n    //取消的回调\r\n    cancel = () => {\r\n        this.setState({showAdd:!this.state.showAdd})\r\n    }\r\n    //点击分类按钮的回调\r\n    sortValue = (event) => {\r\n        let value = event.target.innerHTML\r\n        if(value.length<=10){\r\n            console.log(value);\r\n        }else{}\r\n        //console.log(event.target.innerHTML);\r\n    }\r\n    //分类下拉框的回调\r\n    handleChange = (value) => {\r\n        //console.log(`selected ${value}`);\r\n        this.setState({sendSort:value})\r\n    }\r\n    //发表按钮回调\r\n    publish = () => {\r\n        //console.log('dian le ');\r\n        this.setState({\r\n            visible: true,\r\n        });\r\n    }\r\n    handleOk = async e => {\r\n        //console.log(e);\r\n        this.setState({\r\n          visible: false,\r\n        });\r\n        const username =this.props.user.username\r\n        const {sendSort:sort,titleValue:title} = this.state\r\n        if(sort){\r\n            if(title){\r\n                let text = this.RichText.getRichText()\r\n                // console.log(username);\r\n                // console.log(sort);\r\n                // console.log(title);\r\n                // console.log(text);\r\n                //发送添加文章的请求\r\n                let result =await addText(title,username,sort,text)\r\n                if(result!==undefined){\r\n                    message.success('发表成功',1)\r\n                    console.log(result);\r\n                    this.setState({isShow:false})\r\n                }else{message.info('网络差，请稍后再试！',1)}\r\n                \r\n            }else{}\r\n        }else{message.info('分类是必选的！',1)}\r\n    };\r\n    handleCancel = e => {\r\n        //console.log(e);\r\n        this.setState({\r\n          visible: false,\r\n        });\r\n    };\r\n    onFinish = (values) => {\r\n        this.setState({\r\n            visible: true,\r\n        })\r\n        this.setState({titleValue:values.title})\r\n      //console.log('Success:', values);\r\n    };\r\n    showWriting_editor = () => {\r\n        this.setState({isShow:true})\r\n    }\r\n   \r\n    render() {\r\n        const {sort} = this.state\r\n        //console.log(this.state.sort); \r\n        return (\r\n            <div className=\"writing_div\">\r\n                <div className=\"writing_left\">\r\n                    <Link to=\"/home\">\r\n                    <Button className=\"writing_left_home\" type=\"primary\" shape=\"round\"  size='large' ghost='true'>\r\n                        回首页\r\n                    </Button></Link>\r\n                    <button onClick={this.addSort}\r\n                     style={{color:'white', fontSize:\"15px\",outline:'none',backgroundColor:r,border:'none'}}>\r\n                    <PlusOutlined/>新建分类</button>\r\n                    <div>\r\n                    {\r\n                        this.state.showAdd?<div>\r\n                            <Input \r\n                            ref={this.valueRef}\r\n                            style={{backgroundColor:'#595959',marginTop:'10px',marginBottom:'12px',color:'white'}} \r\n                            placeholder=\"请输入分类名...\" \r\n                            maxLength=\"10\"\r\n                            bordered= {false}\r\n                            size='large'/>\r\n                            <Button \r\n                            onClick={this.submit}\r\n                            type=\"primary\" shape=\"round\" size='middle' ghost='true'\r\n                            style={{color:'\t #33cc00',borderColor:'\t #33cc00'}}>\r\n                            提交</Button>\r\n                            <Button onClick={this.cancel} style={{color:'#999999',marginLeft:'10px'}} type=\"link\">取消</Button>\r\n                        </div>:null\r\n                    }\r\n                    </div>\r\n                    <div onClick={this.sortValue} className=\"sort_div\">\r\n                        {\r\n                            sort?\r\n                            sort.map((a) => {\r\n                                return <li className='sort_div_li' key={nanoid()}>{a}</li>\r\n                            }):null\r\n                        }\r\n                    </div>\r\n                </div>\r\n                {\r\n                    this.state.isShow?\r\n                    <div className='writing_editor'>\r\n                    <h1 className='editor_h1'>标题</h1>\r\n                    <Form\r\n                       onFinish={this.onFinish}\r\n                    >\r\n                    <Form.Item\r\n                        name=\"title\"\r\n                        rules={[{ required: true, message: '标题不能为空!' },\r\n                                {max:30,message: '标题最多为30位!',},\r\n                                {pattern:/^[^\\s]*$/,message: '标题不能含空格'},]}\r\n                    >\r\n                    <Input size=\"large\" autoComplete=\"off\" placeholder=\"在此输入标题\"/>\r\n                    </Form.Item>\r\n\r\n                    <h2 className='editor_h2'>分类</h2> \r\n                    <Select defaultValue=\"--选择分类--\" style={{ width: '100%' }} onChange={this.handleChange}>\r\n                        {   \r\n                            sort?\r\n                            sort.map((a) => {\r\n                                return <Option key={nanoid()} value={a}>{a}</Option>\r\n                            }):null\r\n                        }\r\n                        \r\n                    </Select>\r\n                    <Form.Item >\r\n                    <h3 className='editor_h3'>正文\r\n                    <Button\r\n                     //onClick={this.publish}\r\n                     htmlType=\"submit\"\r\n                     type=\"primary\" ghost={true}\r\n                     style={{width:'120px',float:'right',marginRight:'10px'}} \r\n                     shape=\"round\" size={'large'}>发表</Button>\r\n                    </h3> </Form.Item>\r\n                    </Form>\r\n                    <Modal\r\n                        title=\"提示\"\r\n                        visible={this.state.visible}\r\n                        onOk={this.handleOk}\r\n                        onCancel={this.handleCancel}\r\n                        >\r\n                        <p>确定发表吗？</p>\r\n                    </Modal>\r\n                    <div className='editor'><RichTextEditor ref={c=>this.RichText=c} /></div>\r\n                    \r\n                </div>\r\n                    :<div onClick={this.showWriting_editor}>添加文章</div>\r\n            }\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Writing"]},"metadata":{},"sourceType":"module"}