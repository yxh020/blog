{"ast":null,"code":"import \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nvar _jsxFileName = \"C:\\\\Users\\\\SHYA\\\\Desktop\\\\blog\\\\src\\\\containers\\\\personal\\\\personal.jsx\";\nimport React, { Component, useContext, useState, useEffect, useRef } from 'react';\nimport './personal.less';\nimport { nanoid } from 'nanoid';\nimport { getUserInfo } from '../../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class personal extends Component {\n  async componentDidMount() {\n    let id = localStorage.getItem('id'); //console.log(id);\n    //发送请求\n\n    let result = await getUserInfo(id);\n\n    if (result !== undefined) {\n      console.log(result);\n      const {\n        status,\n        data\n      } = result; //console.log(status,data);\n\n      if (status === 0) {\n        console.log('普通用户'); //普通用户只展示自己的文章\n\n        this.setState({\n          textdata: data.textdata\n        });\n      } else if (status === 2) {\n        console.log('管理员账户'); //管理员展示所有文章和所有账户\n      } else {\n        _message.info('查询失败', 1);\n      }\n    } else {\n      //没联网\n      console.log('没联网');\n    }\n  } // delete = () => {\n  //     this.setState({show:!this.state.show})\n  // }\n  // deleteText = (event) => {\n  //     console.log(event.target.parentNode.parentNode);\n  // }\n  // const textdata = this.state.textdata\n  // const {show} = this.state\n  // <div className='personal'>\n\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: false,\n      data: [],\n      textdata: []\n    };\n\n    this.handleDelete = key => {\n      const dataSource = [...this.state.dataSource];\n      this.setState({\n        dataSource: dataSource.filter(item => item.key !== key)\n      });\n    };\n\n    this.handleAdd = () => {\n      const {\n        count,\n        dataSource\n      } = this.state;\n      const newData = {\n        key: count,\n        name: `Edward King ${count}`,\n        age: '32',\n        address: `London, Park Lane no. ${count}`\n      };\n      this.setState({\n        dataSource: [...dataSource, newData],\n        count: count + 1\n      });\n    };\n\n    this.handleSave = row => {\n      const newData = [...this.state.dataSource];\n      const index = newData.findIndex(item => row.key === item.key);\n      const item = newData[index];\n      newData.splice(index, 1, { ...item,\n        ...row\n      });\n      this.setState({\n        dataSource: newData\n      });\n    };\n\n    this.columns = [{\n      title: 'name',\n      dataIndex: 'name',\n      width: '30%',\n      editable: true\n    }, {\n      title: 'age',\n      dataIndex: 'age'\n    }, {\n      title: 'address',\n      dataIndex: 'address'\n    }, {\n      title: 'operation',\n      dataIndex: 'operation',\n      render: (_, record) => this.state.dataSource.length >= 1 ? /*#__PURE__*/_jsxDEV(Popconfirm, {\n        title: \"Sure to delete?\",\n        onConfirm: () => this.handleDelete(record.key),\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this) : null\n    }];\n    this.state = {\n      dataSource: [{\n        key: '0',\n        name: 'Edward King 0',\n        age: '32',\n        address: 'London, Park Lane no. 0'\n      }, {\n        key: '1',\n        name: 'Edward King 1',\n        age: '32',\n        address: 'London, Park Lane no. 1'\n      }],\n      count: 2\n    };\n  }\n\n  render() {\n    const {\n      dataSource\n    } = this.state;\n    const components = {\n      body: {\n        row: EditableRow,\n        cell: EditableCell\n      }\n    };\n    const columns = this.columns.map(col => {\n      if (!col.editable) {\n        return col;\n      }\n\n      return { ...col,\n        onCell: record => ({\n          record,\n          editable: col.editable,\n          dataIndex: col.dataIndex,\n          title: col.title,\n          handleSave: this.handleSave\n        })\n      };\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(_Button, {\n        onClick: this.handleAdd,\n        type: \"primary\",\n        style: {\n          marginBottom: 16\n        },\n        children: \"Add a row\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        components: components,\n        rowClassName: () => 'editable-row',\n        bordered: true,\n        dataSource: dataSource,\n        columns: columns\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n{\n  /* <div className=\"personal_text_div\">\r\n                 <p>所有文章</p>\r\n                 <Button className=\"_text_div_delete\" onClick={this.delete}>编辑</Button>\r\n                   {   \r\n                         textdata.map((a) => {\r\n                             return <li key={nanoid()}>{a.title}{'\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0'}{a.date}\r\n                             {show?<Button \r\n                              onClick={this.deleteText}\r\n                              size={'small'}\r\n                              style={{float:'right',marginRight:'10px'}}\r\n                              >\r\n                              删除</Button>:null}\r\n                             </li>\r\n                         })\r\n                     }\r\n                 </div> */\n}","map":{"version":3,"sources":["C:/Users/SHYA/Desktop/blog/src/containers/personal/personal.jsx"],"names":["React","Component","useContext","useState","useEffect","useRef","nanoid","getUserInfo","personal","componentDidMount","id","localStorage","getItem","result","undefined","console","log","status","data","setState","textdata","info","constructor","props","state","show","handleDelete","key","dataSource","filter","item","handleAdd","count","newData","name","age","address","handleSave","row","index","findIndex","splice","columns","title","dataIndex","width","editable","render","_","record","length","components","body","EditableRow","cell","EditableCell","map","col","onCell","marginBottom"],"mappings":"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","sourcesContent":["import React, { Component, useContext, useState, useEffect, useRef } from 'react'\r\nimport './personal.less'\r\nimport {message,Button} from 'antd'\r\nimport {nanoid} from 'nanoid'\r\nimport {getUserInfo} from '../../api'\r\n\r\nexport default class personal extends Component {\r\n    state={\r\n        show:false,\r\n        data:[],\r\n        textdata:[]\r\n    }\r\n\r\n    async componentDidMount (){\r\n        let id = localStorage.getItem('id') \r\n        //console.log(id);\r\n        //发送请求\r\n        let result = await getUserInfo(id)\r\n        if(result!==undefined){\r\n            console.log(result);\r\n            const {status,data} = result\r\n            //console.log(status,data);\r\n            if(status===0){\r\n                console.log('普通用户');\r\n                //普通用户只展示自己的文章\r\n                this.setState({textdata:data.textdata})\r\n            }else if(status===2){\r\n                console.log('管理员账户');\r\n                //管理员展示所有文章和所有账户\r\n            }else{\r\n                message.info('查询失败',1)\r\n            }\r\n        }else{\r\n        //没联网\r\n            console.log('没联网');\r\n        }\r\n        \r\n    }\r\n    // delete = () => {\r\n    //     this.setState({show:!this.state.show})\r\n    // }\r\n    // deleteText = (event) => {\r\n    //     console.log(event.target.parentNode.parentNode);\r\n    // }\r\n    // const textdata = this.state.textdata\r\n    // const {show} = this.state\r\n    // <div className='personal'>\r\n    constructor(props) {\r\n        super(props);\r\n        this.columns = [\r\n          {\r\n            title: 'name',\r\n            dataIndex: 'name',\r\n            width: '30%',\r\n            editable: true,\r\n          },\r\n          {\r\n            title: 'age',\r\n            dataIndex: 'age',\r\n          },\r\n          {\r\n            title: 'address',\r\n            dataIndex: 'address',\r\n          },\r\n          {\r\n            title: 'operation',\r\n            dataIndex: 'operation',\r\n            render: (_, record) =>\r\n              this.state.dataSource.length >= 1 ? (\r\n                <Popconfirm title=\"Sure to delete?\" onConfirm={() => this.handleDelete(record.key)}>\r\n                  <a>Delete</a>\r\n                </Popconfirm>\r\n              ) : null,\r\n          },\r\n        ];\r\n        this.state = {\r\n          dataSource: [\r\n            {\r\n              key: '0',\r\n              name: 'Edward King 0',\r\n              age: '32',\r\n              address: 'London, Park Lane no. 0',\r\n            },\r\n            {\r\n              key: '1',\r\n              name: 'Edward King 1',\r\n              age: '32',\r\n              address: 'London, Park Lane no. 1',\r\n            },\r\n          ],\r\n          count: 2,\r\n        };\r\n      }\r\n    handleDelete = (key) => {\r\n        const dataSource = [...this.state.dataSource];\r\n        this.setState({\r\n          dataSource: dataSource.filter((item) => item.key !== key),\r\n        });\r\n      };\r\n      handleAdd = () => {\r\n        const { count, dataSource } = this.state;\r\n        const newData = {\r\n          key: count,\r\n          name: `Edward King ${count}`,\r\n          age: '32',\r\n          address: `London, Park Lane no. ${count}`,\r\n        };\r\n        this.setState({\r\n          dataSource: [...dataSource, newData],\r\n          count: count + 1,\r\n        });\r\n      };\r\n      handleSave = (row) => {\r\n        const newData = [...this.state.dataSource];\r\n        const index = newData.findIndex((item) => row.key === item.key);\r\n        const item = newData[index];\r\n        newData.splice(index, 1, { ...item, ...row });\r\n        this.setState({\r\n          dataSource: newData,\r\n        });\r\n      };  \r\n\r\n\r\n    render() {\r\n        const { dataSource } = this.state;\r\n        const components = {\r\n          body: {\r\n            row: EditableRow,\r\n            cell: EditableCell,\r\n          },\r\n        };\r\n        const columns = this.columns.map((col) => {\r\n          if (!col.editable) {\r\n            return col;\r\n          }\r\n    \r\n          return {\r\n            ...col,\r\n            onCell: (record) => ({\r\n              record,\r\n              editable: col.editable,\r\n              dataIndex: col.dataIndex,\r\n              title: col.title,\r\n              handleSave: this.handleSave,\r\n            }),\r\n          };\r\n        });\r\n        return (\r\n          <div>\r\n            <Button\r\n              onClick={this.handleAdd}\r\n              type=\"primary\"\r\n              style={{\r\n                marginBottom: 16,\r\n              }}\r\n            >\r\n              Add a row\r\n            </Button>\r\n            <Table\r\n              components={components}\r\n              rowClassName={() => 'editable-row'}\r\n              bordered\r\n              dataSource={dataSource}\r\n              columns={columns}\r\n            />\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n\r\n\r\n{/* <div className=\"personal_text_div\">\r\n                <p>所有文章</p>\r\n                <Button className=\"_text_div_delete\" onClick={this.delete}>编辑</Button>\r\n                  {   \r\n                        textdata.map((a) => {\r\n                            return <li key={nanoid()}>{a.title}{'\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0'}{a.date}\r\n                            {show?<Button \r\n                             onClick={this.deleteText}\r\n                             size={'small'}\r\n                             style={{float:'right',marginRight:'10px'}}\r\n                             >\r\n                             删除</Button>:null}\r\n                            </li>\r\n                        })\r\n                    }\r\n                </div> */}"]},"metadata":{},"sourceType":"module"}