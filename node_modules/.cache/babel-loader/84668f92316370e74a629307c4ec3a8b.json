{"ast":null,"code":"import \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nvar _jsxFileName = \"C:\\\\Users\\\\SHYA\\\\Desktop\\\\blog\\\\src\\\\containers\\\\content\\\\content.jsx\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { reqText } from '../../api';\nimport { HeartFilled } from '@ant-design/icons';\nimport { nanoid } from 'nanoid';\nimport './content.less';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n//import {text} from '../../config/text'\n//const dataArr = text\nexport default class content extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dataArr: []\n    };\n  }\n\n  async componentDidMount() {\n    //请求文章\n    let result = await reqText(1); //console.log(result.status);\n\n    if (result !== undefined) {\n      if (result.status === 0) {\n        //console.log('11111');\n        this.setState({\n          dataArr: result.data\n        });\n      }\n    } else {\n      _message.error('网络差，请稍后再试！', 1);\n    }\n  }\n\n  render() {\n    const {\n      dataArr\n    } = this.state; //console.log(dataArr)\n    //console.log(nanoid().slice(0,6));\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: dataArr.map(data => {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"content_li\",\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                to: {\n                  pathname: '/detail',\n                  state: {\n                    node_id: data._id\n                  }\n                },\n                children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                  className: \"content_title\",\n                  children: data.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 41,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"content_span\",\n                children: ['\\u00A0', data.username, '\\u00A0\\u00A0\\u00A0\\u00A0', /*#__PURE__*/_jsxDEV(HeartFilled, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 46,\n                  columnNumber: 73\n                }, this), '\\u00A0', data.star, '\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0', data.date.slice(0, 10)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n                className: \"content_hr\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 41\n              }, this)]\n            }, nanoid(), true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/SHYA/Desktop/blog/src/containers/content/content.jsx"],"names":["React","Component","Link","reqText","HeartFilled","nanoid","content","state","dataArr","componentDidMount","result","undefined","status","setState","data","error","render","map","pathname","node_id","_id","title","username","star","date","slice"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAAQC,OAAR,QAAsB,WAAtB;AACA,SAAQC,WAAR,QAA0B,mBAA1B;AACA,SAAQC,MAAR,QAAqB,QAArB;AAEA,OAAO,gBAAP;;AAEA;AACA;AAEA,eAAe,MAAMC,OAAN,SAAsBL,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC3CM,KAD2C,GACrC;AACFC,MAAAA,OAAO,EAAE;AADP,KADqC;AAAA;;AAIpB,QAAjBC,iBAAiB,GAAE;AACrB;AACA,QAAIC,MAAM,GAAE,MAAMP,OAAO,CAAC,CAAD,CAAzB,CAFqB,CAGrB;;AACA,QAAGO,MAAM,KAAGC,SAAZ,EAAsB;AAClB,UAAGD,MAAM,CAACE,MAAP,KAAgB,CAAnB,EAAqB;AACjB;AACA,aAAKC,QAAL,CAAc;AAACL,UAAAA,OAAO,EAACE,MAAM,CAACI;AAAhB,SAAd;AACH;AACJ,KALD,MAKK;AAAC,eAAQC,KAAR,CAAc,YAAd,EAA2B,CAA3B;AAA8B;AAEvC;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAK;AAACR,MAAAA;AAAD,QAAY,KAAKD,KAAtB,CADK,CAEL;AACA;;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,6BACI;AAAA,+BACI;AAAA,oBAEMC,OAAO,CAACS,GAAR,CAAaH,IAAD,IAAU;AACpB,gCAAQ;AAAmB,cAAA,SAAS,EAAC,YAA7B;AAAA,sCACI,QAAC,IAAD;AAAM,gBAAA,EAAE,EAAE;AAACI,kBAAAA,QAAQ,EAAC,SAAV;AAAoBX,kBAAAA,KAAK,EAAC;AAACY,oBAAAA,OAAO,EAACL,IAAI,CAACM;AAAd;AAA1B,iBAAV;AAAA,uCACI;AAAI,kBAAA,SAAS,EAAC,eAAd;AAAA,4BAA+BN,IAAI,CAACO;AAApC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBADJ,eAKI;AAAM,gBAAA,SAAS,EAAC,cAAhB;AAAA,2BACK,QADL,EACeP,IAAI,CAACQ,QADpB,EAEK,0BAFL,eAEgC,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,wBAFhC,EAEgD,QAFhD,EAGKR,IAAI,CAACS,IAHV,EAGgB,sCAHhB,EAGwDT,IAAI,CAACU,IAAL,CAAUC,KAAV,CAAgB,CAAhB,EAAkB,EAAlB,CAHxD;AAAA;AAAA;AAAA;AAAA;AAAA,sBALJ,eAUI;AAAI,gBAAA,SAAS,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,sBAVJ;AAAA,eAASpB,MAAM,EAAf;AAAA;AAAA;AAAA;AAAA,oBAAR;AAYD,WAbD;AAFN;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAwBH;;AA7C0C","sourcesContent":["import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {reqText} from '../../api'\r\nimport {HeartFilled} from '@ant-design/icons'\r\nimport {nanoid} from 'nanoid'\r\n\r\nimport './content.less'\r\nimport { message } from 'antd'\r\n//import {text} from '../../config/text'\r\n//const dataArr = text\r\n\r\nexport default class content extends Component {\r\n    state={\r\n        dataArr: []\r\n    }\r\n    async componentDidMount(){\r\n        //请求文章\r\n        let result =await reqText(1)\r\n        //console.log(result.status);\r\n        if(result!==undefined){\r\n            if(result.status===0){\r\n                //console.log('11111');\r\n                this.setState({dataArr:result.data })\r\n            }\r\n        }else{message.error('网络差，请稍后再试！',1)}        \r\n        \r\n    }\r\n    \r\n    render() {\r\n        const{dataArr} = this.state\r\n        //console.log(dataArr)\r\n        //console.log(nanoid().slice(0,6));\r\n        return (\r\n            <div className=\"content\">\r\n                <div>\r\n                    <ul>\r\n                        {\r\n                          dataArr.map((data) => {\r\n                            return  <li key={nanoid()} className=\"content_li\">\r\n                                        <Link to={{pathname:'/detail',state:{node_id:data._id}}}>\r\n                                            <h1 className=\"content_title\">{data.title}</h1>\r\n                                        </Link>\r\n                                        {/* <p className=\"content_p\" dangerouslySetInnerHTML={{__html:data.text.slice(0,140)+'...'}}>{data.text.slice(0,140)+'...'}</p> */}\r\n                                        <span className=\"content_span\">\r\n                                            {'\\u00A0'}{data.username}\r\n                                            {'\\u00A0\\u00A0\\u00A0\\u00A0'}<HeartFilled />{'\\u00A0'}\r\n                                            {data.star}{'\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0'}{data.date.slice(0,10)}\r\n                                        </span>\r\n                                        <hr className=\"content_hr\"/>\r\n                                    </li>    \r\n                          })\r\n                        }\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}