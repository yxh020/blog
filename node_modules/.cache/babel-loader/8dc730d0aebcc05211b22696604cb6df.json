{"ast":null,"code":"import \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nimport axios from 'axios';\nimport qs from 'querystring';\nimport NProgress from 'nprogress';\nimport 'nprogress/nprogress.css';\nconst instance = axios.create({\n  timeout: 4000 //配置超时时间\n\n}); //请求拦截器\n\ninstance.interceptors.request.use(config => {\n  //进度条开始\n  NProgress.start();\n  const {\n    method,\n    data\n  } = config;\n\n  if (method.toLowerCase() === 'post') {\n    //若传过来的参数是对象，则转换成urlencoded形式\n    if (data instanceof Object) {\n      config.data = qs.stringify(data);\n    }\n  }\n\n  return config;\n}); //响应拦截器\n\ninstance.interceptors.response.use(response => {\n  //进度条结束\n  console.log(response);\n  NProgress.done(); //若请求成功，返回数据\n\n  if (response.data.msg) {\n    _message.error(response.data.msg, 1);\n  } else {\n    return response.data;\n  } //return response.data\n\n}, err => {\n  //进度条结束\n  // NProgress.done()\n  // if(err.response.status === 401){\n  //     message.error('身份校验失败，请重新登录',1)\n  // }else{\n  //     //请求若失败，提示错误（这里可以处理所有请求的异常）\n  //     message.error(err.message,1)\n  //     //中断Promise链\n  //     return new Promise(() => {})\n  // }\n  return '错了';\n});\nexport default instance;","map":{"version":3,"sources":["C:/Users/SHYA/Desktop/blog/src/api/ajax.js"],"names":["axios","qs","NProgress","instance","create","timeout","interceptors","request","use","config","start","method","data","toLowerCase","Object","stringify","response","console","log","done","msg","error","err"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,aAAf;AACA,OAAOC,SAAP,MAAsB,WAAtB;AAEA,OAAO,yBAAP;AAEA,MAAMC,QAAQ,GAAGH,KAAK,CAACI,MAAN,CAAa;AAC1BC,EAAAA,OAAO,EAAE,IADiB,CACX;;AADW,CAAb,CAAjB,C,CAIA;;AACAF,QAAQ,CAACG,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CAAmCC,MAAD,IAAY;AAC1C;AACAP,EAAAA,SAAS,CAACQ,KAAV;AAEA,QAAM;AAACC,IAAAA,MAAD;AAAQC,IAAAA;AAAR,MAAgBH,MAAtB;;AACA,MAAIE,MAAM,CAACE,WAAP,OAAyB,MAA7B,EAAqC;AACjC;AACA,QAAGD,IAAI,YAAYE,MAAnB,EAA0B;AACtBL,MAAAA,MAAM,CAACG,IAAP,GAAcX,EAAE,CAACc,SAAH,CAAaH,IAAb,CAAd;AACH;AACJ;;AACD,SAAOH,MAAP;AACH,CAZD,E,CAcA;;AACAN,QAAQ,CAACG,YAAT,CAAsBU,QAAtB,CAA+BR,GAA/B,CAEKQ,QAAD,IAAc;AACV;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAd,EAAAA,SAAS,CAACiB,IAAV,GAHU,CAIV;;AACA,MAAGH,QAAQ,CAACJ,IAAT,CAAcQ,GAAjB,EAAqB;AACjB,aAAQC,KAAR,CAAcL,QAAQ,CAACJ,IAAT,CAAcQ,GAA5B,EAAgC,CAAhC;AACH,GAFD,MAEK;AACD,WAAOJ,QAAQ,CAACJ,IAAhB;AACH,GATS,CAUV;;AACH,CAbL,EAcKU,GAAD,IAAS;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAO,IAAP;AACH,CA1BL;AA4BA,eAAenB,QAAf","sourcesContent":["import axios from 'axios'\r\nimport qs from 'querystring'\r\nimport NProgress from 'nprogress'\r\nimport {message} from 'antd'\r\nimport 'nprogress/nprogress.css'\r\n\r\nconst instance = axios.create({\r\n    timeout: 4000, //配置超时时间\r\n})\r\n\r\n//请求拦截器\r\ninstance.interceptors.request.use((config) => {\r\n    //进度条开始\r\n    NProgress.start()\r\n\r\n    const {method,data} = config\r\n    if (method.toLowerCase() === 'post' ){\r\n        //若传过来的参数是对象，则转换成urlencoded形式\r\n        if(data instanceof Object){\r\n            config.data = qs.stringify(data)\r\n        }\r\n    }\r\n    return config\r\n})\r\n\r\n//响应拦截器\r\ninstance.interceptors.response.use(\r\n    \r\n    (response) => {\r\n        //进度条结束\r\n        console.log(response)\r\n        NProgress.done()\r\n        //若请求成功，返回数据\r\n        if(response.data.msg){\r\n            message.error(response.data.msg,1)\r\n        }else{\r\n            return response.data\r\n        }\r\n        //return response.data\r\n    },\r\n    (err) => {\r\n        //进度条结束\r\n        // NProgress.done()\r\n        // if(err.response.status === 401){\r\n        //     message.error('身份校验失败，请重新登录',1)\r\n        // }else{\r\n        //     //请求若失败，提示错误（这里可以处理所有请求的异常）\r\n        //     message.error(err.message,1)\r\n        //     //中断Promise链\r\n        //     return new Promise(() => {})\r\n        // }\r\n        return '错了'\r\n    }\r\n)\r\nexport default instance"]},"metadata":{},"sourceType":"module"}