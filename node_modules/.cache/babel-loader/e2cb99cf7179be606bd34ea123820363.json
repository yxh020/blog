{"ast":null,"code":"import \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nvar _jsxFileName = \"C:\\\\Users\\\\SHYA\\\\Desktop\\\\blog\\\\src\\\\containers\\\\personal\\\\personal.jsx\";\nimport React, { Component } from 'react';\nimport './personal.less';\nimport { nanoid } from 'nanoid';\nimport { getUserInfo } from '../../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class personal extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      show: false,\n      data: [],\n      textdata: []\n    };\n  }\n\n  async componentDidMount() {\n    let id = localStorage.getItem('id'); //console.log(id);\n    //发送请求\n\n    let result = await getUserInfo(id);\n\n    if (result !== undefined) {\n      console.log(result);\n      const {\n        status,\n        data\n      } = result; //console.log(status,data);\n\n      if (status === 0) {\n        console.log('普通用户'); //普通用户只展示自己的文章\n\n        this.setState({\n          textdata: data.textdata\n        });\n      } else if (status === 2) {\n        console.log('管理员账户'); //管理员展示所有文章和所有账户\n      } else {\n        _message.info('查询失败', 1);\n      }\n    } else {\n      //没联网\n      console.log('没联网');\n    }\n  } // delete = () => {\n  //     this.setState({show:!this.state.show})\n  // }\n  // deleteText = (event) => {\n  //     console.log(event.target.parentNode.parentNode);\n  // }\n  // const textdata = this.state.textdata\n  // const {show} = this.state\n  // <div className='personal'>\n\n\n  render() {\n    const {\n      dataSource\n    } = this.state;\n    const components = {\n      body: {\n        row: EditableRow,\n        cell: EditableCell\n      }\n    };\n    const columns = this.columns.map(col => {\n      if (!col.editable) {\n        return col;\n      }\n\n      return { ...col,\n        onCell: record => ({\n          record,\n          editable: col.editable,\n          dataIndex: col.dataIndex,\n          title: col.title,\n          handleSave: this.handleSave\n        })\n      };\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(_Button, {\n        onClick: this.handleAdd,\n        type: \"primary\",\n        style: {\n          marginBottom: 16\n        },\n        children: \"Add a row\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        components: components,\n        rowClassName: () => 'editable-row',\n        bordered: true,\n        dataSource: dataSource,\n        columns: columns\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n{\n  /* <div className=\"personal_text_div\">\r\n                 <p>所有文章</p>\r\n                 <Button className=\"_text_div_delete\" onClick={this.delete}>编辑</Button>\r\n                   {   \r\n                         textdata.map((a) => {\r\n                             return <li key={nanoid()}>{a.title}{'\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0'}{a.date}\r\n                             {show?<Button \r\n                              onClick={this.deleteText}\r\n                              size={'small'}\r\n                              style={{float:'right',marginRight:'10px'}}\r\n                              >\r\n                              删除</Button>:null}\r\n                             </li>\r\n                         })\r\n                     }\r\n                 </div> */\n}","map":{"version":3,"sources":["C:/Users/SHYA/Desktop/blog/src/containers/personal/personal.jsx"],"names":["React","Component","nanoid","getUserInfo","personal","state","show","data","textdata","componentDidMount","id","localStorage","getItem","result","undefined","console","log","status","setState","info","render","dataSource","components","body","row","EditableRow","cell","EditableCell","columns","map","col","editable","onCell","record","dataIndex","title","handleSave","handleAdd","marginBottom"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport './personal.less'\r\nimport {message,Button} from 'antd'\r\nimport {nanoid} from 'nanoid'\r\nimport {getUserInfo} from '../../api'\r\n\r\nexport default class personal extends Component {\r\n    state={\r\n        show:false,\r\n        data:[],\r\n        textdata:[]\r\n    }\r\n\r\n    async componentDidMount (){\r\n        let id = localStorage.getItem('id') \r\n        //console.log(id);\r\n        //发送请求\r\n        let result = await getUserInfo(id)\r\n        if(result!==undefined){\r\n            console.log(result);\r\n            const {status,data} = result\r\n            //console.log(status,data);\r\n            if(status===0){\r\n                console.log('普通用户');\r\n                //普通用户只展示自己的文章\r\n                this.setState({textdata:data.textdata})\r\n            }else if(status===2){\r\n                console.log('管理员账户');\r\n                //管理员展示所有文章和所有账户\r\n            }else{\r\n                message.info('查询失败',1)\r\n            }\r\n        }else{\r\n        //没联网\r\n            console.log('没联网');\r\n        }\r\n        \r\n    }\r\n    // delete = () => {\r\n    //     this.setState({show:!this.state.show})\r\n    // }\r\n    // deleteText = (event) => {\r\n    //     console.log(event.target.parentNode.parentNode);\r\n    // }\r\n    // const textdata = this.state.textdata\r\n    // const {show} = this.state\r\n    // <div className='personal'>\r\n    \r\n\r\n    \r\n    render() {\r\n        const { dataSource } = this.state;\r\n        const components = {\r\n          body: {\r\n            row: EditableRow,\r\n            cell: EditableCell,\r\n          },\r\n        };\r\n        const columns = this.columns.map((col) => {\r\n          if (!col.editable) {\r\n            return col;\r\n          }\r\n    \r\n          return {\r\n            ...col,\r\n            onCell: (record) => ({\r\n              record,\r\n              editable: col.editable,\r\n              dataIndex: col.dataIndex,\r\n              title: col.title,\r\n              handleSave: this.handleSave,\r\n            }),\r\n          };\r\n        });\r\n        return (\r\n          <div>\r\n            <Button\r\n              onClick={this.handleAdd}\r\n              type=\"primary\"\r\n              style={{\r\n                marginBottom: 16,\r\n              }}\r\n            >\r\n              Add a row\r\n            </Button>\r\n            <Table\r\n              components={components}\r\n              rowClassName={() => 'editable-row'}\r\n              bordered\r\n              dataSource={dataSource}\r\n              columns={columns}\r\n            />\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n\r\n\r\n{/* <div className=\"personal_text_div\">\r\n                <p>所有文章</p>\r\n                <Button className=\"_text_div_delete\" onClick={this.delete}>编辑</Button>\r\n                  {   \r\n                        textdata.map((a) => {\r\n                            return <li key={nanoid()}>{a.title}{'\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0'}{a.date}\r\n                            {show?<Button \r\n                             onClick={this.deleteText}\r\n                             size={'small'}\r\n                             style={{float:'right',marginRight:'10px'}}\r\n                             >\r\n                             删除</Button>:null}\r\n                            </li>\r\n                        })\r\n                    }\r\n                </div> */}"]},"metadata":{},"sourceType":"module"}